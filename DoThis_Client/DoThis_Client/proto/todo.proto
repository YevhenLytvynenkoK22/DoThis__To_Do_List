
syntax = "proto3";
option csharp_namespace = "Todo";
package todo;

message Empty {}

enum State {
    Pending = 0;
    Completed = 1;
}

message Task {
    int32 id = 1;
    string title = 2;
    string description = 3;
    State state = 4;
}

message Column {
    int32 id = 1;
    string name = 2;
    repeated Task tasks = 3;
}

message Board {
    repeated Column columns = 1;
}

message AddColumnRequest {
    string name = 1;
}

message RenameColumnRequest {
    int32 column_id = 1;
    string new_name = 2;
}

message AddTaskToColumnRequest {
    int32 column_id = 1;
    string title = 2;
    string description = 3;
}

message MoveTaskRequest {
    int32 task_id = 1;
    int32 from_column_id = 2;
    int32 to_column_id = 3;
}

message UpdateTaskRequest {
    int32 task_id = 1;
    string new_title = 2;
    string new_description = 3;
    State new_state = 4;
}

message ToggleTaskStateRequest {
  int32 task_id = 1;
}

message ColumnList {
    repeated Column columns = 1;
}

message ColumnIdRequest {
    int32 column_id = 1;
}

message TaskIdRequest {
    int32 task_id = 1;
}

service ToDoService {
    rpc AddColumn(AddColumnRequest) returns (Column);
    rpc RenameColumn(RenameColumnRequest) returns (Column);
    rpc GetBoard(Empty) returns (Board);
    rpc AddTaskToColumn(AddTaskToColumnRequest) returns (Task);
    rpc UpdateTask(UpdateTaskRequest) returns (Task);
    rpc ToggleTaskState(ToggleTaskStateRequest) returns (Task);
    rpc MoveTask(MoveTaskRequest) returns (Task);
    rpc Sync(Empty) returns (stream Board);
    rpc DeleteColumn(ColumnIdRequest) returns (Empty);
    rpc DeleteTask(TaskIdRequest) returns (Empty);
}