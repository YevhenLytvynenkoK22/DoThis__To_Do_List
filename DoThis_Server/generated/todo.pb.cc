// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: todo.proto
// Protobuf C++ Version: 5.29.3

#include "todo.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace todo {

inline constexpr UpdateTaskRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : new_title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        task_id_{0},
        new_state_{static_cast< ::todo::State >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateTaskRequest::UpdateTaskRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateTaskRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateTaskRequestDefaultTypeInternal() {}
  union {
    UpdateTaskRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateTaskRequestDefaultTypeInternal _UpdateTaskRequest_default_instance_;

inline constexpr ToggleTaskStateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ToggleTaskStateRequest::ToggleTaskStateRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ToggleTaskStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToggleTaskStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToggleTaskStateRequestDefaultTypeInternal() {}
  union {
    ToggleTaskStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToggleTaskStateRequestDefaultTypeInternal _ToggleTaskStateRequest_default_instance_;

inline constexpr TaskIdRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TaskIdRequest::TaskIdRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskIdRequestDefaultTypeInternal() {}
  union {
    TaskIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskIdRequestDefaultTypeInternal _TaskIdRequest_default_instance_;

inline constexpr Task::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        state_{static_cast< ::todo::State >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Task::Task(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskDefaultTypeInternal() {}
  union {
    Task _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskDefaultTypeInternal _Task_default_instance_;

inline constexpr RenameColumnRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : new_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        column_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RenameColumnRequest::RenameColumnRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RenameColumnRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RenameColumnRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RenameColumnRequestDefaultTypeInternal() {}
  union {
    RenameColumnRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RenameColumnRequestDefaultTypeInternal _RenameColumnRequest_default_instance_;

inline constexpr MoveTaskRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_{0},
        from_column_id_{0},
        to_column_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MoveTaskRequest::MoveTaskRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MoveTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoveTaskRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoveTaskRequestDefaultTypeInternal() {}
  union {
    MoveTaskRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveTaskRequestDefaultTypeInternal _MoveTaskRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;

inline constexpr ColumnIdRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : column_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ColumnIdRequest::ColumnIdRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ColumnIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColumnIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColumnIdRequestDefaultTypeInternal() {}
  union {
    ColumnIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColumnIdRequestDefaultTypeInternal _ColumnIdRequest_default_instance_;

inline constexpr AddTaskToColumnRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        column_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddTaskToColumnRequest::AddTaskToColumnRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddTaskToColumnRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddTaskToColumnRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddTaskToColumnRequestDefaultTypeInternal() {}
  union {
    AddTaskToColumnRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddTaskToColumnRequestDefaultTypeInternal _AddTaskToColumnRequest_default_instance_;

inline constexpr AddColumnRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddColumnRequest::AddColumnRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddColumnRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddColumnRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddColumnRequestDefaultTypeInternal() {}
  union {
    AddColumnRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddColumnRequestDefaultTypeInternal _AddColumnRequest_default_instance_;

inline constexpr Column::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tasks_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Column::Column(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ColumnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColumnDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColumnDefaultTypeInternal() {}
  union {
    Column _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColumnDefaultTypeInternal _Column_default_instance_;

inline constexpr ColumnList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : columns_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ColumnList::ColumnList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ColumnListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColumnListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColumnListDefaultTypeInternal() {}
  union {
    ColumnList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColumnListDefaultTypeInternal _ColumnList_default_instance_;

inline constexpr Board::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : columns_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Board::Board(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BoardDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoardDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoardDefaultTypeInternal() {}
  union {
    Board _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoardDefaultTypeInternal _Board_default_instance_;
}  // namespace todo
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_todo_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_todo_2eproto = nullptr;
const ::uint32_t
    TableStruct_todo_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::Empty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::Task, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::todo::Task, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::todo::Task, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::todo::Task, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::todo::Task, _impl_.state_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::Column, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::todo::Column, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::todo::Column, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::todo::Column, _impl_.tasks_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::Board, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::todo::Board, _impl_.columns_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::AddColumnRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::todo::AddColumnRequest, _impl_.name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::RenameColumnRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::todo::RenameColumnRequest, _impl_.column_id_),
        PROTOBUF_FIELD_OFFSET(::todo::RenameColumnRequest, _impl_.new_name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::AddTaskToColumnRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::todo::AddTaskToColumnRequest, _impl_.column_id_),
        PROTOBUF_FIELD_OFFSET(::todo::AddTaskToColumnRequest, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::todo::AddTaskToColumnRequest, _impl_.description_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::MoveTaskRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::todo::MoveTaskRequest, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::todo::MoveTaskRequest, _impl_.from_column_id_),
        PROTOBUF_FIELD_OFFSET(::todo::MoveTaskRequest, _impl_.to_column_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::UpdateTaskRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::todo::UpdateTaskRequest, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::todo::UpdateTaskRequest, _impl_.new_title_),
        PROTOBUF_FIELD_OFFSET(::todo::UpdateTaskRequest, _impl_.new_description_),
        PROTOBUF_FIELD_OFFSET(::todo::UpdateTaskRequest, _impl_.new_state_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::ToggleTaskStateRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::todo::ToggleTaskStateRequest, _impl_.task_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::ColumnList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::todo::ColumnList, _impl_.columns_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::ColumnIdRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::todo::ColumnIdRequest, _impl_.column_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::todo::TaskIdRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::todo::TaskIdRequest, _impl_.task_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::todo::Empty)},
        {8, -1, -1, sizeof(::todo::Task)},
        {20, -1, -1, sizeof(::todo::Column)},
        {31, -1, -1, sizeof(::todo::Board)},
        {40, -1, -1, sizeof(::todo::AddColumnRequest)},
        {49, -1, -1, sizeof(::todo::RenameColumnRequest)},
        {59, -1, -1, sizeof(::todo::AddTaskToColumnRequest)},
        {70, -1, -1, sizeof(::todo::MoveTaskRequest)},
        {81, -1, -1, sizeof(::todo::UpdateTaskRequest)},
        {93, -1, -1, sizeof(::todo::ToggleTaskStateRequest)},
        {102, -1, -1, sizeof(::todo::ColumnList)},
        {111, -1, -1, sizeof(::todo::ColumnIdRequest)},
        {120, -1, -1, sizeof(::todo::TaskIdRequest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::todo::_Empty_default_instance_._instance,
    &::todo::_Task_default_instance_._instance,
    &::todo::_Column_default_instance_._instance,
    &::todo::_Board_default_instance_._instance,
    &::todo::_AddColumnRequest_default_instance_._instance,
    &::todo::_RenameColumnRequest_default_instance_._instance,
    &::todo::_AddTaskToColumnRequest_default_instance_._instance,
    &::todo::_MoveTaskRequest_default_instance_._instance,
    &::todo::_UpdateTaskRequest_default_instance_._instance,
    &::todo::_ToggleTaskStateRequest_default_instance_._instance,
    &::todo::_ColumnList_default_instance_._instance,
    &::todo::_ColumnIdRequest_default_instance_._instance,
    &::todo::_TaskIdRequest_default_instance_._instance,
};
const char descriptor_table_protodef_todo_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ntodo.proto\022\004todo\"\007\n\005Empty\"R\n\004Task\022\n\n\002i"
    "d\030\001 \001(\005\022\r\n\005title\030\002 \001(\t\022\023\n\013description\030\003 "
    "\001(\t\022\032\n\005state\030\004 \001(\0162\013.todo.State\"=\n\006Colum"
    "n\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\031\n\005tasks\030\003 \003"
    "(\0132\n.todo.Task\"&\n\005Board\022\035\n\007columns\030\001 \003(\013"
    "2\014.todo.Column\" \n\020AddColumnRequest\022\014\n\004na"
    "me\030\001 \001(\t\":\n\023RenameColumnRequest\022\021\n\tcolum"
    "n_id\030\001 \001(\005\022\020\n\010new_name\030\002 \001(\t\"O\n\026AddTaskT"
    "oColumnRequest\022\021\n\tcolumn_id\030\001 \001(\005\022\r\n\005tit"
    "le\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\"P\n\017MoveTas"
    "kRequest\022\017\n\007task_id\030\001 \001(\005\022\026\n\016from_column"
    "_id\030\002 \001(\005\022\024\n\014to_column_id\030\003 \001(\005\"p\n\021Updat"
    "eTaskRequest\022\017\n\007task_id\030\001 \001(\005\022\021\n\tnew_tit"
    "le\030\002 \001(\t\022\027\n\017new_description\030\003 \001(\t\022\036\n\tnew"
    "_state\030\004 \001(\0162\013.todo.State\")\n\026ToggleTaskS"
    "tateRequest\022\017\n\007task_id\030\001 \001(\005\"+\n\nColumnLi"
    "st\022\035\n\007columns\030\001 \003(\0132\014.todo.Column\"$\n\017Col"
    "umnIdRequest\022\021\n\tcolumn_id\030\001 \001(\005\" \n\rTaskI"
    "dRequest\022\017\n\007task_id\030\001 \001(\005*#\n\005State\022\013\n\007Pe"
    "nding\020\000\022\r\n\tCompleted\020\0012\203\004\n\013ToDoService\0221"
    "\n\tAddColumn\022\026.todo.AddColumnRequest\032\014.to"
    "do.Column\0227\n\014RenameColumn\022\031.todo.RenameC"
    "olumnRequest\032\014.todo.Column\022$\n\010GetBoard\022\013"
    ".todo.Empty\032\013.todo.Board\022;\n\017AddTaskToCol"
    "umn\022\034.todo.AddTaskToColumnRequest\032\n.todo"
    ".Task\0221\n\nUpdateTask\022\027.todo.UpdateTaskReq"
    "uest\032\n.todo.Task\022;\n\017ToggleTaskState\022\034.to"
    "do.ToggleTaskStateRequest\032\n.todo.Task\022-\n"
    "\010MoveTask\022\025.todo.MoveTaskRequest\032\n.todo."
    "Task\022\"\n\004Sync\022\013.todo.Empty\032\013.todo.Board0\001"
    "\0222\n\014DeleteColumn\022\025.todo.ColumnIdRequest\032"
    "\013.todo.Empty\022.\n\nDeleteTask\022\023.todo.TaskId"
    "Request\032\013.todo.Emptyb\006proto3"
};
static ::absl::once_flag descriptor_table_todo_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_todo_2eproto = {
    false,
    false,
    1308,
    descriptor_table_protodef_todo_2eproto,
    "todo.proto",
    &descriptor_table_todo_2eproto_once,
    nullptr,
    0,
    13,
    schemas,
    file_default_instances,
    TableStruct_todo_2eproto::offsets,
    file_level_enum_descriptors_todo_2eproto,
    file_level_service_descriptors_todo_2eproto,
};
namespace todo {
const ::google::protobuf::EnumDescriptor* State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_todo_2eproto);
  return file_level_enum_descriptors_todo_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t State_internal_data_[] = {
    131072u, 0u, };
bool State_IsValid(int value) {
  return 0 <= value && value <= 1;
}
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:todo.Empty)
}
Empty::Empty(
    ::google::protobuf::Arena* arena,
    const Empty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:todo.Empty)
}

inline void* Empty::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Empty(arena);
}
constexpr auto Empty::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Empty),
                                            alignof(Empty));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Empty::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Empty_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Empty::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Empty>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Empty::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Empty>(), &Empty::ByteSizeLong,
            &Empty::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Empty, _impl_._cached_size_),
        false,
    },
    &Empty::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Empty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Empty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::Empty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Task::_Internal {
 public:
};

Task::Task(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:todo.Task)
}
inline PROTOBUF_NDEBUG_INLINE Task::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::todo::Task& from_msg)
      : title_(arena, from.title_),
        description_(arena, from.description_),
        _cached_size_{0} {}

Task::Task(
    ::google::protobuf::Arena* arena,
    const Task& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Task* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, state_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::state_));

  // @@protoc_insertion_point(copy_constructor:todo.Task)
}
inline PROTOBUF_NDEBUG_INLINE Task::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : title_(arena),
        description_(arena),
        _cached_size_{0} {}

inline void Task::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, state_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::state_));
}
Task::~Task() {
  // @@protoc_insertion_point(destructor:todo.Task)
  SharedDtor(*this);
}
inline void Task::SharedDtor(MessageLite& self) {
  Task& this_ = static_cast<Task&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Task::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Task(arena);
}
constexpr auto Task::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Task),
                                            alignof(Task));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Task::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Task_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Task::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Task>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Task::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Task>(), &Task::ByteSizeLong,
            &Task::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Task, _impl_._cached_size_),
        false,
    },
    &Task::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Task::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 34, 2> Task::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::Task>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .todo.State state = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Task, _impl_.state_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.state_)}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Task, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.id_)}},
    // string title = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.title_)}},
    // string description = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.description_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string title = 2;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .todo.State state = 4;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\11\0\5\13\0\0\0\0"
    "todo.Task"
    "title"
    "description"
  }},
};

PROTOBUF_NOINLINE void Task::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.Task)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.state_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.state_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Task::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Task& this_ = static_cast<const Task&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Task::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Task& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:todo.Task)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 id = 1;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_id(), target);
          }

          // string title = 2;
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "todo.Task.title");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string description = 3;
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "todo.Task.description");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .todo.State state = 4;
          if (this_._internal_state() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_state(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:todo.Task)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Task::ByteSizeLong(const MessageLite& base) {
          const Task& this_ = static_cast<const Task&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Task::ByteSizeLong() const {
          const Task& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:todo.Task)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string title = 2;
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 3;
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // int32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_id());
            }
            // .todo.State state = 4;
            if (this_._internal_state() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_state());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Task::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Task*>(&to_msg);
  auto& from = static_cast<const Task&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:todo.Task)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_state() != 0) {
    _this->_impl_.state_ = from._impl_.state_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Task::CopyFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Task::InternalSwap(Task* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Task, _impl_.state_)
      + sizeof(Task::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(Task, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata Task::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Column::_Internal {
 public:
};

Column::Column(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:todo.Column)
}
inline PROTOBUF_NDEBUG_INLINE Column::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::todo::Column& from_msg)
      : tasks_{visibility, arena, from.tasks_},
        name_(arena, from.name_),
        _cached_size_{0} {}

Column::Column(
    ::google::protobuf::Arena* arena,
    const Column& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Column* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:todo.Column)
}
inline PROTOBUF_NDEBUG_INLINE Column::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tasks_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void Column::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
Column::~Column() {
  // @@protoc_insertion_point(destructor:todo.Column)
  SharedDtor(*this);
}
inline void Column::SharedDtor(MessageLite& self) {
  Column& this_ = static_cast<Column&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Column::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Column(arena);
}
constexpr auto Column::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Column, _impl_.tasks_) +
          decltype(Column::_impl_.tasks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Column), alignof(Column), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Column::PlacementNew_,
                                 sizeof(Column),
                                 alignof(Column));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Column::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Column_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Column::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Column>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Column::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Column>(), &Column::ByteSizeLong,
            &Column::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Column, _impl_._cached_size_),
        false,
    },
    &Column::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Column::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 24, 2> Column::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::Column>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Column, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Column, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Column, _impl_.name_)}},
    // repeated .todo.Task tasks = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Column, _impl_.tasks_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Column, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(Column, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .todo.Task tasks = 3;
    {PROTOBUF_FIELD_OFFSET(Column, _impl_.tasks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::todo::Task>()},
  }}, {{
    "\13\0\4\0\0\0\0\0"
    "todo.Column"
    "name"
  }},
};

PROTOBUF_NOINLINE void Column::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.Column)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tasks_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Column::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Column& this_ = static_cast<const Column&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Column::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Column& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:todo.Column)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 id = 1;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_id(), target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "todo.Column.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .todo.Task tasks = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tasks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tasks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:todo.Column)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Column::ByteSizeLong(const MessageLite& base) {
          const Column& this_ = static_cast<const Column&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Column::ByteSizeLong() const {
          const Column& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:todo.Column)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .todo.Task tasks = 3;
            {
              total_size += 1UL * this_._internal_tasks_size();
              for (const auto& msg : this_._internal_tasks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // int32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Column::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Column*>(&to_msg);
  auto& from = static_cast<const Column&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:todo.Column)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tasks()->MergeFrom(
      from._internal_tasks());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Column::CopyFrom(const Column& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Column::InternalSwap(Column* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tasks_.InternalSwap(&other->_impl_.tasks_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata Column::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Board::_Internal {
 public:
};

Board::Board(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:todo.Board)
}
inline PROTOBUF_NDEBUG_INLINE Board::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::todo::Board& from_msg)
      : columns_{visibility, arena, from.columns_},
        _cached_size_{0} {}

Board::Board(
    ::google::protobuf::Arena* arena,
    const Board& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Board* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:todo.Board)
}
inline PROTOBUF_NDEBUG_INLINE Board::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : columns_{visibility, arena},
        _cached_size_{0} {}

inline void Board::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Board::~Board() {
  // @@protoc_insertion_point(destructor:todo.Board)
  SharedDtor(*this);
}
inline void Board::SharedDtor(MessageLite& self) {
  Board& this_ = static_cast<Board&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Board::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Board(arena);
}
constexpr auto Board::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Board, _impl_.columns_) +
          decltype(Board::_impl_.columns_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Board), alignof(Board), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Board::PlacementNew_,
                                 sizeof(Board),
                                 alignof(Board));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Board::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Board_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Board::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Board>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Board::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Board>(), &Board::ByteSizeLong,
            &Board::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Board, _impl_._cached_size_),
        false,
    },
    &Board::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Board::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Board::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::Board>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .todo.Column columns = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Board, _impl_.columns_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .todo.Column columns = 1;
    {PROTOBUF_FIELD_OFFSET(Board, _impl_.columns_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::todo::Column>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Board::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.Board)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.columns_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Board::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Board& this_ = static_cast<const Board&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Board::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Board& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:todo.Board)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .todo.Column columns = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_columns_size());
               i < n; i++) {
            const auto& repfield = this_._internal_columns().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:todo.Board)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Board::ByteSizeLong(const MessageLite& base) {
          const Board& this_ = static_cast<const Board&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Board::ByteSizeLong() const {
          const Board& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:todo.Board)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .todo.Column columns = 1;
            {
              total_size += 1UL * this_._internal_columns_size();
              for (const auto& msg : this_._internal_columns()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Board::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Board*>(&to_msg);
  auto& from = static_cast<const Board&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:todo.Board)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_columns()->MergeFrom(
      from._internal_columns());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Board::CopyFrom(const Board& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.Board)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Board::InternalSwap(Board* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.columns_.InternalSwap(&other->_impl_.columns_);
}

::google::protobuf::Metadata Board::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddColumnRequest::_Internal {
 public:
};

AddColumnRequest::AddColumnRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:todo.AddColumnRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddColumnRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::todo::AddColumnRequest& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

AddColumnRequest::AddColumnRequest(
    ::google::protobuf::Arena* arena,
    const AddColumnRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddColumnRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:todo.AddColumnRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddColumnRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void AddColumnRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AddColumnRequest::~AddColumnRequest() {
  // @@protoc_insertion_point(destructor:todo.AddColumnRequest)
  SharedDtor(*this);
}
inline void AddColumnRequest::SharedDtor(MessageLite& self) {
  AddColumnRequest& this_ = static_cast<AddColumnRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AddColumnRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AddColumnRequest(arena);
}
constexpr auto AddColumnRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AddColumnRequest),
                                            alignof(AddColumnRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AddColumnRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AddColumnRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AddColumnRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AddColumnRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AddColumnRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AddColumnRequest>(), &AddColumnRequest::ByteSizeLong,
            &AddColumnRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AddColumnRequest, _impl_._cached_size_),
        false,
    },
    &AddColumnRequest::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AddColumnRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 34, 2> AddColumnRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::AddColumnRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AddColumnRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(AddColumnRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\4\0\0\0\0\0\0"
    "todo.AddColumnRequest"
    "name"
  }},
};

PROTOBUF_NOINLINE void AddColumnRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.AddColumnRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AddColumnRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AddColumnRequest& this_ = static_cast<const AddColumnRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AddColumnRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AddColumnRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:todo.AddColumnRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "todo.AddColumnRequest.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:todo.AddColumnRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AddColumnRequest::ByteSizeLong(const MessageLite& base) {
          const AddColumnRequest& this_ = static_cast<const AddColumnRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AddColumnRequest::ByteSizeLong() const {
          const AddColumnRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:todo.AddColumnRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AddColumnRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddColumnRequest*>(&to_msg);
  auto& from = static_cast<const AddColumnRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:todo.AddColumnRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddColumnRequest::CopyFrom(const AddColumnRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.AddColumnRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddColumnRequest::InternalSwap(AddColumnRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata AddColumnRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RenameColumnRequest::_Internal {
 public:
};

RenameColumnRequest::RenameColumnRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:todo.RenameColumnRequest)
}
inline PROTOBUF_NDEBUG_INLINE RenameColumnRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::todo::RenameColumnRequest& from_msg)
      : new_name_(arena, from.new_name_),
        _cached_size_{0} {}

RenameColumnRequest::RenameColumnRequest(
    ::google::protobuf::Arena* arena,
    const RenameColumnRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RenameColumnRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.column_id_ = from._impl_.column_id_;

  // @@protoc_insertion_point(copy_constructor:todo.RenameColumnRequest)
}
inline PROTOBUF_NDEBUG_INLINE RenameColumnRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : new_name_(arena),
        _cached_size_{0} {}

inline void RenameColumnRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.column_id_ = {};
}
RenameColumnRequest::~RenameColumnRequest() {
  // @@protoc_insertion_point(destructor:todo.RenameColumnRequest)
  SharedDtor(*this);
}
inline void RenameColumnRequest::SharedDtor(MessageLite& self) {
  RenameColumnRequest& this_ = static_cast<RenameColumnRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.new_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RenameColumnRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RenameColumnRequest(arena);
}
constexpr auto RenameColumnRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RenameColumnRequest),
                                            alignof(RenameColumnRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RenameColumnRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RenameColumnRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RenameColumnRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RenameColumnRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RenameColumnRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RenameColumnRequest>(), &RenameColumnRequest::ByteSizeLong,
            &RenameColumnRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RenameColumnRequest, _impl_._cached_size_),
        false,
    },
    &RenameColumnRequest::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RenameColumnRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2> RenameColumnRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::RenameColumnRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string new_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RenameColumnRequest, _impl_.new_name_)}},
    // int32 column_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RenameColumnRequest, _impl_.column_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RenameColumnRequest, _impl_.column_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 column_id = 1;
    {PROTOBUF_FIELD_OFFSET(RenameColumnRequest, _impl_.column_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string new_name = 2;
    {PROTOBUF_FIELD_OFFSET(RenameColumnRequest, _impl_.new_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\10\0\0\0\0\0"
    "todo.RenameColumnRequest"
    "new_name"
  }},
};

PROTOBUF_NOINLINE void RenameColumnRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.RenameColumnRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.new_name_.ClearToEmpty();
  _impl_.column_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RenameColumnRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RenameColumnRequest& this_ = static_cast<const RenameColumnRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RenameColumnRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RenameColumnRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:todo.RenameColumnRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 column_id = 1;
          if (this_._internal_column_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_column_id(), target);
          }

          // string new_name = 2;
          if (!this_._internal_new_name().empty()) {
            const std::string& _s = this_._internal_new_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "todo.RenameColumnRequest.new_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:todo.RenameColumnRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RenameColumnRequest::ByteSizeLong(const MessageLite& base) {
          const RenameColumnRequest& this_ = static_cast<const RenameColumnRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RenameColumnRequest::ByteSizeLong() const {
          const RenameColumnRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:todo.RenameColumnRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string new_name = 2;
            if (!this_._internal_new_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_new_name());
            }
            // int32 column_id = 1;
            if (this_._internal_column_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_column_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RenameColumnRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RenameColumnRequest*>(&to_msg);
  auto& from = static_cast<const RenameColumnRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:todo.RenameColumnRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_new_name().empty()) {
    _this->_internal_set_new_name(from._internal_new_name());
  }
  if (from._internal_column_id() != 0) {
    _this->_impl_.column_id_ = from._impl_.column_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RenameColumnRequest::CopyFrom(const RenameColumnRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.RenameColumnRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RenameColumnRequest::InternalSwap(RenameColumnRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_name_, &other->_impl_.new_name_, arena);
        swap(_impl_.column_id_, other->_impl_.column_id_);
}

::google::protobuf::Metadata RenameColumnRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddTaskToColumnRequest::_Internal {
 public:
};

AddTaskToColumnRequest::AddTaskToColumnRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:todo.AddTaskToColumnRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddTaskToColumnRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::todo::AddTaskToColumnRequest& from_msg)
      : title_(arena, from.title_),
        description_(arena, from.description_),
        _cached_size_{0} {}

AddTaskToColumnRequest::AddTaskToColumnRequest(
    ::google::protobuf::Arena* arena,
    const AddTaskToColumnRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddTaskToColumnRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.column_id_ = from._impl_.column_id_;

  // @@protoc_insertion_point(copy_constructor:todo.AddTaskToColumnRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddTaskToColumnRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : title_(arena),
        description_(arena),
        _cached_size_{0} {}

inline void AddTaskToColumnRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.column_id_ = {};
}
AddTaskToColumnRequest::~AddTaskToColumnRequest() {
  // @@protoc_insertion_point(destructor:todo.AddTaskToColumnRequest)
  SharedDtor(*this);
}
inline void AddTaskToColumnRequest::SharedDtor(MessageLite& self) {
  AddTaskToColumnRequest& this_ = static_cast<AddTaskToColumnRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AddTaskToColumnRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AddTaskToColumnRequest(arena);
}
constexpr auto AddTaskToColumnRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AddTaskToColumnRequest),
                                            alignof(AddTaskToColumnRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AddTaskToColumnRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AddTaskToColumnRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AddTaskToColumnRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AddTaskToColumnRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AddTaskToColumnRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AddTaskToColumnRequest>(), &AddTaskToColumnRequest::ByteSizeLong,
            &AddTaskToColumnRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AddTaskToColumnRequest, _impl_._cached_size_),
        false,
    },
    &AddTaskToColumnRequest::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AddTaskToColumnRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 52, 2> AddTaskToColumnRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::AddTaskToColumnRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 column_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AddTaskToColumnRequest, _impl_.column_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AddTaskToColumnRequest, _impl_.column_id_)}},
    // string title = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AddTaskToColumnRequest, _impl_.title_)}},
    // string description = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AddTaskToColumnRequest, _impl_.description_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 column_id = 1;
    {PROTOBUF_FIELD_OFFSET(AddTaskToColumnRequest, _impl_.column_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string title = 2;
    {PROTOBUF_FIELD_OFFSET(AddTaskToColumnRequest, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3;
    {PROTOBUF_FIELD_OFFSET(AddTaskToColumnRequest, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\5\13\0\0\0\0"
    "todo.AddTaskToColumnRequest"
    "title"
    "description"
  }},
};

PROTOBUF_NOINLINE void AddTaskToColumnRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.AddTaskToColumnRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.column_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AddTaskToColumnRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AddTaskToColumnRequest& this_ = static_cast<const AddTaskToColumnRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AddTaskToColumnRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AddTaskToColumnRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:todo.AddTaskToColumnRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 column_id = 1;
          if (this_._internal_column_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_column_id(), target);
          }

          // string title = 2;
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "todo.AddTaskToColumnRequest.title");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string description = 3;
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "todo.AddTaskToColumnRequest.description");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:todo.AddTaskToColumnRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AddTaskToColumnRequest::ByteSizeLong(const MessageLite& base) {
          const AddTaskToColumnRequest& this_ = static_cast<const AddTaskToColumnRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AddTaskToColumnRequest::ByteSizeLong() const {
          const AddTaskToColumnRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:todo.AddTaskToColumnRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string title = 2;
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 3;
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // int32 column_id = 1;
            if (this_._internal_column_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_column_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AddTaskToColumnRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddTaskToColumnRequest*>(&to_msg);
  auto& from = static_cast<const AddTaskToColumnRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:todo.AddTaskToColumnRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_column_id() != 0) {
    _this->_impl_.column_id_ = from._impl_.column_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddTaskToColumnRequest::CopyFrom(const AddTaskToColumnRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.AddTaskToColumnRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddTaskToColumnRequest::InternalSwap(AddTaskToColumnRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
        swap(_impl_.column_id_, other->_impl_.column_id_);
}

::google::protobuf::Metadata AddTaskToColumnRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MoveTaskRequest::_Internal {
 public:
};

MoveTaskRequest::MoveTaskRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:todo.MoveTaskRequest)
}
MoveTaskRequest::MoveTaskRequest(
    ::google::protobuf::Arena* arena, const MoveTaskRequest& from)
    : MoveTaskRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MoveTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MoveTaskRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, task_id_),
           0,
           offsetof(Impl_, to_column_id_) -
               offsetof(Impl_, task_id_) +
               sizeof(Impl_::to_column_id_));
}
MoveTaskRequest::~MoveTaskRequest() {
  // @@protoc_insertion_point(destructor:todo.MoveTaskRequest)
  SharedDtor(*this);
}
inline void MoveTaskRequest::SharedDtor(MessageLite& self) {
  MoveTaskRequest& this_ = static_cast<MoveTaskRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MoveTaskRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MoveTaskRequest(arena);
}
constexpr auto MoveTaskRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MoveTaskRequest),
                                            alignof(MoveTaskRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MoveTaskRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MoveTaskRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MoveTaskRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MoveTaskRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MoveTaskRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MoveTaskRequest>(), &MoveTaskRequest::ByteSizeLong,
            &MoveTaskRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MoveTaskRequest, _impl_._cached_size_),
        false,
    },
    &MoveTaskRequest::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MoveTaskRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> MoveTaskRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::MoveTaskRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 task_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MoveTaskRequest, _impl_.task_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MoveTaskRequest, _impl_.task_id_)}},
    // int32 from_column_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MoveTaskRequest, _impl_.from_column_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MoveTaskRequest, _impl_.from_column_id_)}},
    // int32 to_column_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MoveTaskRequest, _impl_.to_column_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MoveTaskRequest, _impl_.to_column_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 task_id = 1;
    {PROTOBUF_FIELD_OFFSET(MoveTaskRequest, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 from_column_id = 2;
    {PROTOBUF_FIELD_OFFSET(MoveTaskRequest, _impl_.from_column_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 to_column_id = 3;
    {PROTOBUF_FIELD_OFFSET(MoveTaskRequest, _impl_.to_column_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MoveTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.MoveTaskRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.task_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.to_column_id_) -
      reinterpret_cast<char*>(&_impl_.task_id_)) + sizeof(_impl_.to_column_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MoveTaskRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MoveTaskRequest& this_ = static_cast<const MoveTaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MoveTaskRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MoveTaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:todo.MoveTaskRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 task_id = 1;
          if (this_._internal_task_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_task_id(), target);
          }

          // int32 from_column_id = 2;
          if (this_._internal_from_column_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_from_column_id(), target);
          }

          // int32 to_column_id = 3;
          if (this_._internal_to_column_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_to_column_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:todo.MoveTaskRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MoveTaskRequest::ByteSizeLong(const MessageLite& base) {
          const MoveTaskRequest& this_ = static_cast<const MoveTaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MoveTaskRequest::ByteSizeLong() const {
          const MoveTaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:todo.MoveTaskRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 task_id = 1;
            if (this_._internal_task_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_task_id());
            }
            // int32 from_column_id = 2;
            if (this_._internal_from_column_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_from_column_id());
            }
            // int32 to_column_id = 3;
            if (this_._internal_to_column_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_to_column_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MoveTaskRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MoveTaskRequest*>(&to_msg);
  auto& from = static_cast<const MoveTaskRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:todo.MoveTaskRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_task_id() != 0) {
    _this->_impl_.task_id_ = from._impl_.task_id_;
  }
  if (from._internal_from_column_id() != 0) {
    _this->_impl_.from_column_id_ = from._impl_.from_column_id_;
  }
  if (from._internal_to_column_id() != 0) {
    _this->_impl_.to_column_id_ = from._impl_.to_column_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MoveTaskRequest::CopyFrom(const MoveTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.MoveTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MoveTaskRequest::InternalSwap(MoveTaskRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MoveTaskRequest, _impl_.to_column_id_)
      + sizeof(MoveTaskRequest::_impl_.to_column_id_)
      - PROTOBUF_FIELD_OFFSET(MoveTaskRequest, _impl_.task_id_)>(
          reinterpret_cast<char*>(&_impl_.task_id_),
          reinterpret_cast<char*>(&other->_impl_.task_id_));
}

::google::protobuf::Metadata MoveTaskRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateTaskRequest::_Internal {
 public:
};

UpdateTaskRequest::UpdateTaskRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:todo.UpdateTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::todo::UpdateTaskRequest& from_msg)
      : new_title_(arena, from.new_title_),
        new_description_(arena, from.new_description_),
        _cached_size_{0} {}

UpdateTaskRequest::UpdateTaskRequest(
    ::google::protobuf::Arena* arena,
    const UpdateTaskRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateTaskRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, task_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, task_id_),
           offsetof(Impl_, new_state_) -
               offsetof(Impl_, task_id_) +
               sizeof(Impl_::new_state_));

  // @@protoc_insertion_point(copy_constructor:todo.UpdateTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : new_title_(arena),
        new_description_(arena),
        _cached_size_{0} {}

inline void UpdateTaskRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, task_id_),
           0,
           offsetof(Impl_, new_state_) -
               offsetof(Impl_, task_id_) +
               sizeof(Impl_::new_state_));
}
UpdateTaskRequest::~UpdateTaskRequest() {
  // @@protoc_insertion_point(destructor:todo.UpdateTaskRequest)
  SharedDtor(*this);
}
inline void UpdateTaskRequest::SharedDtor(MessageLite& self) {
  UpdateTaskRequest& this_ = static_cast<UpdateTaskRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.new_title_.Destroy();
  this_._impl_.new_description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UpdateTaskRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateTaskRequest(arena);
}
constexpr auto UpdateTaskRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateTaskRequest),
                                            alignof(UpdateTaskRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateTaskRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateTaskRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateTaskRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateTaskRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateTaskRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateTaskRequest>(), &UpdateTaskRequest::ByteSizeLong,
            &UpdateTaskRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_._cached_size_),
        false,
    },
    &UpdateTaskRequest::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateTaskRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 55, 2> UpdateTaskRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::UpdateTaskRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .todo.State new_state = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateTaskRequest, _impl_.new_state_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.new_state_)}},
    // int32 task_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateTaskRequest, _impl_.task_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.task_id_)}},
    // string new_title = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.new_title_)}},
    // string new_description = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.new_description_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 task_id = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string new_title = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.new_title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string new_description = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.new_description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .todo.State new_state = 4;
    {PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.new_state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\26\0\11\17\0\0\0\0"
    "todo.UpdateTaskRequest"
    "new_title"
    "new_description"
  }},
};

PROTOBUF_NOINLINE void UpdateTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.UpdateTaskRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.new_title_.ClearToEmpty();
  _impl_.new_description_.ClearToEmpty();
  ::memset(&_impl_.task_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.new_state_) -
      reinterpret_cast<char*>(&_impl_.task_id_)) + sizeof(_impl_.new_state_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateTaskRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateTaskRequest& this_ = static_cast<const UpdateTaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateTaskRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateTaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:todo.UpdateTaskRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 task_id = 1;
          if (this_._internal_task_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_task_id(), target);
          }

          // string new_title = 2;
          if (!this_._internal_new_title().empty()) {
            const std::string& _s = this_._internal_new_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "todo.UpdateTaskRequest.new_title");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string new_description = 3;
          if (!this_._internal_new_description().empty()) {
            const std::string& _s = this_._internal_new_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "todo.UpdateTaskRequest.new_description");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .todo.State new_state = 4;
          if (this_._internal_new_state() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_new_state(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:todo.UpdateTaskRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateTaskRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateTaskRequest& this_ = static_cast<const UpdateTaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateTaskRequest::ByteSizeLong() const {
          const UpdateTaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:todo.UpdateTaskRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string new_title = 2;
            if (!this_._internal_new_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_new_title());
            }
            // string new_description = 3;
            if (!this_._internal_new_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_new_description());
            }
            // int32 task_id = 1;
            if (this_._internal_task_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_task_id());
            }
            // .todo.State new_state = 4;
            if (this_._internal_new_state() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_new_state());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateTaskRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateTaskRequest*>(&to_msg);
  auto& from = static_cast<const UpdateTaskRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:todo.UpdateTaskRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_new_title().empty()) {
    _this->_internal_set_new_title(from._internal_new_title());
  }
  if (!from._internal_new_description().empty()) {
    _this->_internal_set_new_description(from._internal_new_description());
  }
  if (from._internal_task_id() != 0) {
    _this->_impl_.task_id_ = from._impl_.task_id_;
  }
  if (from._internal_new_state() != 0) {
    _this->_impl_.new_state_ = from._impl_.new_state_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateTaskRequest::CopyFrom(const UpdateTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.UpdateTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateTaskRequest::InternalSwap(UpdateTaskRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_title_, &other->_impl_.new_title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_description_, &other->_impl_.new_description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.new_state_)
      + sizeof(UpdateTaskRequest::_impl_.new_state_)
      - PROTOBUF_FIELD_OFFSET(UpdateTaskRequest, _impl_.task_id_)>(
          reinterpret_cast<char*>(&_impl_.task_id_),
          reinterpret_cast<char*>(&other->_impl_.task_id_));
}

::google::protobuf::Metadata UpdateTaskRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ToggleTaskStateRequest::_Internal {
 public:
};

ToggleTaskStateRequest::ToggleTaskStateRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:todo.ToggleTaskStateRequest)
}
ToggleTaskStateRequest::ToggleTaskStateRequest(
    ::google::protobuf::Arena* arena, const ToggleTaskStateRequest& from)
    : ToggleTaskStateRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ToggleTaskStateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ToggleTaskStateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_id_ = {};
}
ToggleTaskStateRequest::~ToggleTaskStateRequest() {
  // @@protoc_insertion_point(destructor:todo.ToggleTaskStateRequest)
  SharedDtor(*this);
}
inline void ToggleTaskStateRequest::SharedDtor(MessageLite& self) {
  ToggleTaskStateRequest& this_ = static_cast<ToggleTaskStateRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ToggleTaskStateRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ToggleTaskStateRequest(arena);
}
constexpr auto ToggleTaskStateRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ToggleTaskStateRequest),
                                            alignof(ToggleTaskStateRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ToggleTaskStateRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ToggleTaskStateRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ToggleTaskStateRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ToggleTaskStateRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ToggleTaskStateRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ToggleTaskStateRequest>(), &ToggleTaskStateRequest::ByteSizeLong,
            &ToggleTaskStateRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ToggleTaskStateRequest, _impl_._cached_size_),
        false,
    },
    &ToggleTaskStateRequest::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ToggleTaskStateRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ToggleTaskStateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::ToggleTaskStateRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 task_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ToggleTaskStateRequest, _impl_.task_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ToggleTaskStateRequest, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 task_id = 1;
    {PROTOBUF_FIELD_OFFSET(ToggleTaskStateRequest, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ToggleTaskStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.ToggleTaskStateRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ToggleTaskStateRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ToggleTaskStateRequest& this_ = static_cast<const ToggleTaskStateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ToggleTaskStateRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ToggleTaskStateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:todo.ToggleTaskStateRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 task_id = 1;
          if (this_._internal_task_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_task_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:todo.ToggleTaskStateRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ToggleTaskStateRequest::ByteSizeLong(const MessageLite& base) {
          const ToggleTaskStateRequest& this_ = static_cast<const ToggleTaskStateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ToggleTaskStateRequest::ByteSizeLong() const {
          const ToggleTaskStateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:todo.ToggleTaskStateRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 task_id = 1;
            if (this_._internal_task_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_task_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ToggleTaskStateRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ToggleTaskStateRequest*>(&to_msg);
  auto& from = static_cast<const ToggleTaskStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:todo.ToggleTaskStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_task_id() != 0) {
    _this->_impl_.task_id_ = from._impl_.task_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ToggleTaskStateRequest::CopyFrom(const ToggleTaskStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.ToggleTaskStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ToggleTaskStateRequest::InternalSwap(ToggleTaskStateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.task_id_, other->_impl_.task_id_);
}

::google::protobuf::Metadata ToggleTaskStateRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ColumnList::_Internal {
 public:
};

ColumnList::ColumnList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:todo.ColumnList)
}
inline PROTOBUF_NDEBUG_INLINE ColumnList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::todo::ColumnList& from_msg)
      : columns_{visibility, arena, from.columns_},
        _cached_size_{0} {}

ColumnList::ColumnList(
    ::google::protobuf::Arena* arena,
    const ColumnList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ColumnList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:todo.ColumnList)
}
inline PROTOBUF_NDEBUG_INLINE ColumnList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : columns_{visibility, arena},
        _cached_size_{0} {}

inline void ColumnList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ColumnList::~ColumnList() {
  // @@protoc_insertion_point(destructor:todo.ColumnList)
  SharedDtor(*this);
}
inline void ColumnList::SharedDtor(MessageLite& self) {
  ColumnList& this_ = static_cast<ColumnList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ColumnList::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ColumnList(arena);
}
constexpr auto ColumnList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ColumnList, _impl_.columns_) +
          decltype(ColumnList::_impl_.columns_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ColumnList), alignof(ColumnList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ColumnList::PlacementNew_,
                                 sizeof(ColumnList),
                                 alignof(ColumnList));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ColumnList::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ColumnList_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ColumnList::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ColumnList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ColumnList::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ColumnList>(), &ColumnList::ByteSizeLong,
            &ColumnList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ColumnList, _impl_._cached_size_),
        false,
    },
    &ColumnList::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ColumnList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ColumnList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::ColumnList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .todo.Column columns = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ColumnList, _impl_.columns_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .todo.Column columns = 1;
    {PROTOBUF_FIELD_OFFSET(ColumnList, _impl_.columns_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::todo::Column>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ColumnList::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.ColumnList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.columns_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ColumnList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ColumnList& this_ = static_cast<const ColumnList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ColumnList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ColumnList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:todo.ColumnList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .todo.Column columns = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_columns_size());
               i < n; i++) {
            const auto& repfield = this_._internal_columns().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:todo.ColumnList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ColumnList::ByteSizeLong(const MessageLite& base) {
          const ColumnList& this_ = static_cast<const ColumnList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ColumnList::ByteSizeLong() const {
          const ColumnList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:todo.ColumnList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .todo.Column columns = 1;
            {
              total_size += 1UL * this_._internal_columns_size();
              for (const auto& msg : this_._internal_columns()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ColumnList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ColumnList*>(&to_msg);
  auto& from = static_cast<const ColumnList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:todo.ColumnList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_columns()->MergeFrom(
      from._internal_columns());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ColumnList::CopyFrom(const ColumnList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.ColumnList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ColumnList::InternalSwap(ColumnList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.columns_.InternalSwap(&other->_impl_.columns_);
}

::google::protobuf::Metadata ColumnList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ColumnIdRequest::_Internal {
 public:
};

ColumnIdRequest::ColumnIdRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:todo.ColumnIdRequest)
}
ColumnIdRequest::ColumnIdRequest(
    ::google::protobuf::Arena* arena, const ColumnIdRequest& from)
    : ColumnIdRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ColumnIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ColumnIdRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.column_id_ = {};
}
ColumnIdRequest::~ColumnIdRequest() {
  // @@protoc_insertion_point(destructor:todo.ColumnIdRequest)
  SharedDtor(*this);
}
inline void ColumnIdRequest::SharedDtor(MessageLite& self) {
  ColumnIdRequest& this_ = static_cast<ColumnIdRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ColumnIdRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ColumnIdRequest(arena);
}
constexpr auto ColumnIdRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ColumnIdRequest),
                                            alignof(ColumnIdRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ColumnIdRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ColumnIdRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ColumnIdRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ColumnIdRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ColumnIdRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ColumnIdRequest>(), &ColumnIdRequest::ByteSizeLong,
            &ColumnIdRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ColumnIdRequest, _impl_._cached_size_),
        false,
    },
    &ColumnIdRequest::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ColumnIdRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ColumnIdRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::ColumnIdRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 column_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ColumnIdRequest, _impl_.column_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ColumnIdRequest, _impl_.column_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 column_id = 1;
    {PROTOBUF_FIELD_OFFSET(ColumnIdRequest, _impl_.column_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ColumnIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.ColumnIdRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.column_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ColumnIdRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ColumnIdRequest& this_ = static_cast<const ColumnIdRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ColumnIdRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ColumnIdRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:todo.ColumnIdRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 column_id = 1;
          if (this_._internal_column_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_column_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:todo.ColumnIdRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ColumnIdRequest::ByteSizeLong(const MessageLite& base) {
          const ColumnIdRequest& this_ = static_cast<const ColumnIdRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ColumnIdRequest::ByteSizeLong() const {
          const ColumnIdRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:todo.ColumnIdRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 column_id = 1;
            if (this_._internal_column_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_column_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ColumnIdRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ColumnIdRequest*>(&to_msg);
  auto& from = static_cast<const ColumnIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:todo.ColumnIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_column_id() != 0) {
    _this->_impl_.column_id_ = from._impl_.column_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ColumnIdRequest::CopyFrom(const ColumnIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.ColumnIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ColumnIdRequest::InternalSwap(ColumnIdRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.column_id_, other->_impl_.column_id_);
}

::google::protobuf::Metadata ColumnIdRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TaskIdRequest::_Internal {
 public:
};

TaskIdRequest::TaskIdRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:todo.TaskIdRequest)
}
TaskIdRequest::TaskIdRequest(
    ::google::protobuf::Arena* arena, const TaskIdRequest& from)
    : TaskIdRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TaskIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TaskIdRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_id_ = {};
}
TaskIdRequest::~TaskIdRequest() {
  // @@protoc_insertion_point(destructor:todo.TaskIdRequest)
  SharedDtor(*this);
}
inline void TaskIdRequest::SharedDtor(MessageLite& self) {
  TaskIdRequest& this_ = static_cast<TaskIdRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TaskIdRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TaskIdRequest(arena);
}
constexpr auto TaskIdRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TaskIdRequest),
                                            alignof(TaskIdRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TaskIdRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TaskIdRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TaskIdRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TaskIdRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TaskIdRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TaskIdRequest>(), &TaskIdRequest::ByteSizeLong,
            &TaskIdRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TaskIdRequest, _impl_._cached_size_),
        false,
    },
    &TaskIdRequest::kDescriptorMethods,
    &descriptor_table_todo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TaskIdRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TaskIdRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::todo::TaskIdRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 task_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskIdRequest, _impl_.task_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TaskIdRequest, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 task_id = 1;
    {PROTOBUF_FIELD_OFFSET(TaskIdRequest, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TaskIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.TaskIdRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TaskIdRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TaskIdRequest& this_ = static_cast<const TaskIdRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TaskIdRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TaskIdRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:todo.TaskIdRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 task_id = 1;
          if (this_._internal_task_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_task_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:todo.TaskIdRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TaskIdRequest::ByteSizeLong(const MessageLite& base) {
          const TaskIdRequest& this_ = static_cast<const TaskIdRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TaskIdRequest::ByteSizeLong() const {
          const TaskIdRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:todo.TaskIdRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int32 task_id = 1;
            if (this_._internal_task_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_task_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TaskIdRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskIdRequest*>(&to_msg);
  auto& from = static_cast<const TaskIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:todo.TaskIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_task_id() != 0) {
    _this->_impl_.task_id_ = from._impl_.task_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskIdRequest::CopyFrom(const TaskIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.TaskIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskIdRequest::InternalSwap(TaskIdRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.task_id_, other->_impl_.task_id_);
}

::google::protobuf::Metadata TaskIdRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace todo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_todo_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
